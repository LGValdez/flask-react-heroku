{"version":3,"sources":["Components/Home/Home.js","Components/Projects/ProjectItem/ProjectItem.js","Components/Projects/ProjectDescription/TechnologiesList.js","Components/Projects/ProjectDescription/ProjectDescription.js","Components/Projects/Projects.js","Components/Contact/Contact.js","Components/Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","state","setState","useEffect","fetch","then","response","status","json","data","error","className","info","map","i","ProjectItem","project","updateCurrentProject","onClick","name","TechnologiesList","technologies","getImage","tech","src","alt","width","id","ProjectDescription","description","frameworks","Projects","currentProject","setCurrentProject","axios","get","projects","Contact","Navigation","props","to","exact","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9813836.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const Home = () => {\r\n\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/me\").then(response => {\r\n            if (response.status === 200) {\r\n                return response.json()\r\n            }\r\n        }).then(data => setState(data))\r\n            .then(error => error)\r\n    }, [])\r\n\r\n    return <div className=\"content\">\r\n        <h2>About Me</h2>\r\n        {(typeof state.info === 'undefined') ? (\r\n            <p>Loading...</p>\r\n        ) : (\r\n            state.info.map((info, i) => (\r\n                <p key={i}>{info}</p>\r\n            ))\r\n        )}\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const ProjectItem = ({ project, updateCurrentProject }) => {\r\n\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        setState({ 'project': project })\r\n    }, [project])\r\n\r\n    return <div className=\"project-item\">\r\n        <div onClick={() => updateCurrentProject(project)}>\r\n            {(typeof state.project === 'undefined') ? (\r\n                <p>Loading project data...</p>\r\n            ) : (state.project.name)}\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react';\r\n\r\nexport const TechnologiesList = ({ technologies }) => {\r\n\r\n    const getImage = (tech) => {\r\n        if (tech === 'Python') { return <img src=\"/technologies/python.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'JavaScript') { return <img src=\"/technologies/javascript.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'PostgreSQL') { return <img src=\"/technologies/postgresql.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'Docker') { return <img src=\"/technologies/docker.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'Odoo') { return <img src=\"/technologies/odoo.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'jQuery') { return <img src=\"/technologies/jquery.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'PyCharm') { return <img src=\"/technologies/pycharm.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'PGAdmin') { return <img src=\"/technologies/pgadmin.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'Django') { return <img src=\"/technologies/django.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'ReactJS') { return <img src=\"/technologies/react.png\" alt=\"\" width=\"64\" /> }\r\n        if (tech === 'VSCode') { return <img src=\"/technologies/vscode.png\" alt=\"\" width=\"64\" /> }\r\n    }\r\n\r\n    return <ul>\r\n        {technologies.map((tech, id) => (\r\n            <li key={id}>\r\n                {getImage(tech)}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n}\r\n","import React from 'react';\r\nimport { TechnologiesList } from './TechnologiesList'\r\n\r\nexport const ProjectDescription = ({ project }) => {\r\n\r\n    return <div className=\"project-item-description\">\r\n        <p>{project.description}</p>\r\n        <h4>Technologies</h4>\r\n        <TechnologiesList technologies={project.technologies} />\r\n        <h4>Frameworks</h4>\r\n        <TechnologiesList technologies={project.frameworks} />\r\n    </div>\r\n}\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { ProjectItem } from './ProjectItem/ProjectItem';\r\nimport { ProjectDescription } from './ProjectDescription/ProjectDescription';\r\n\r\nexport const Projects = () => {\r\n\r\n    const [state, setState] = useState({})\r\n    const [currentProject, setCurrentProject] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/api/projects\").then(response => {\r\n            setState({ 'projects': response.data })\r\n        }\r\n        )\r\n    }, [])\r\n\r\n    return <div className=\"content\">\r\n        <div className=\"project-item-list\">\r\n            <h3>List</h3>\r\n            {(typeof state.projects === 'undefined') ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                state.projects.map((project) => (\r\n                    <ProjectItem key={project.id} project={project} updateCurrentProject={(project) => setCurrentProject(project)} />\r\n                ))\r\n            )}\r\n        </div>\r\n        <div className=\"item-description\">\r\n            <h3>Description</h3>\r\n            {(typeof currentProject.id === 'undefined') ? (\r\n                <p>Click on a project...</p>\r\n            ) : (\r\n                <ProjectDescription project={currentProject} />\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react';\r\n\r\nexport const Contact = () => {\r\n    return <h2>Contact</h2>\r\n}\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\nimport { Home } from '../Home/Home';\r\nimport { Projects } from '../Projects/Projects';\r\nimport { Contact } from '../Contact/Contact';\r\n\r\nfunction Navigation({ props }) {\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav className=\"main-nav\">\r\n          <ul>\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/projects\">Projects</Link></li>\r\n            <li><Link to=\"/contact\">Contact</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/projects\" render={() => <Projects />} />\r\n        <Route exact path=\"/contact\" render={() => <Contact />} />\r\n        <Route exact path=\"/\" render={() => <Home />} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import './App.css';\nimport Navigation from './Components/Navigation/Navigation';\n\nfunction App() {\n\n  return (\n    <div className=\"main\">\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}